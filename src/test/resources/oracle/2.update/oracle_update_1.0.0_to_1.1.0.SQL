---------------------------重要说明---------------------------------------------------
-- ------------------------------准备工作 准备业务表的记录表---------------------------------------------------
-- ==================
-- 升级脚本固定开始部分(进行版本检测和更新记录)
-- ==================
-- 一、执行前提：执行本更新数据脚本之前，数据结构已处于 3.0.0 版本，可在版本表中查看版本,查询语句如下：
-- select * from sys_version;
-- 二、升级过程
-- 检查当前数据库版本是否满足要求，如果不满足要求，会报主键冲突的错误阻止后续语句继续执行，请向开发人员及时汇报
declare
	new_db_version varchar(1000) := '0.0.0';
	allow_db_version varchar(1000) := '1.0.0';
	old_db_version varchar(1000);
	validate_code int;
begin
	dbms_output.enable();
	proc_check_version(new_db_version,allow_db_version,old_db_version,validate_code);
	dbms_output.put_line('校验code:' || validate_code || '当前待升级的数据库版本是:' || old_db_version || ',升级到:' || new_db_version);
	IF validate_code <> 0 THEN
		raise_application_error(-20000,'当前待升级的数据库版本是:' || old_db_version || ',无法直接升级到:' || new_db_version || ',请使用正确的升级脚本');
	END IF;

end;
/

-- TODO 记录脚本更新记录，暂无重要用途

-- ==================
-- 删除表，新建表
-- ==================


-- 表：图谱信息(graph)
begin
  proc_create_table('GRAPH',
  'CREATE TABLE "GRAPH" (
	"ID" NUMBER(11) NOT NULL,
	"TYPE" NVARCHAR2(32),
    "KEY" NVARCHAR2(128),
    "NAME_CN" NVARCHAR2(128),
    "NAME" NVARCHAR2(128),
    "SPACE_ID" NUMBER(11),
    "NODE_TYPE_COUNT" NUMBER(11),
    "NODE_AMOUNT" NUMBER(11),
    "EDGE_TYPE_COUNT" NUMBER(11),
    "EDGE_AMOUNT" NUMBER(11),
    "EDGE_AND_NODE_TYPE_TOTAL" NUMBER(11),
    "EDGE_AND_NODE_TOTAL" NUMBER(11),
    "ORG_ID" NUMBER(11),
    "CREATED_DT" DATE,
    "UPDATED_DT" DATE
)');
end;
/
COMMENT ON COLUMN "GRAPH"."TYPE" IS '图谱类型';
COMMENT ON COLUMN "GRAPH"."KEY" IS '图谱唯一标识';
COMMENT ON COLUMN "GRAPH"."NAME_CN" IS '图谱中文名称';
COMMENT ON COLUMN "GRAPH"."NAME" IS '图谱英文名称';
COMMENT ON COLUMN "GRAPH"."SPACE_ID" IS '子图空间ID';
COMMENT ON COLUMN "GRAPH"."NODE_TYPE_COUNT" IS '实体类型数量';
COMMENT ON COLUMN "GRAPH"."NODE_AMOUNT" IS '实体数据量';
COMMENT ON COLUMN "GRAPH"."EDGE_TYPE_COUNT" IS '关系类型数量';
COMMENT ON COLUMN "GRAPH"."EDGE_AMOUNT" IS '关系数据量';
COMMENT ON COLUMN "GRAPH"."EDGE_AND_NODE_TYPE_TOTAL" IS '实体关系类型总数据量';
COMMENT ON COLUMN "GRAPH"."EDGE_AND_NODE_TOTAL" IS '实体关系总数据量';
COMMENT ON COLUMN "GRAPH"."ORG_ID" IS '所属组织ID';
COMMENT ON COLUMN "GRAPH"."CREATED_DT" IS '创建时间';
COMMENT ON COLUMN "GRAPH"."UPDATED_DT" IS '更新时间';
COMMENT ON TABLE "GRAPH" IS '应用子图信息';
/

-- 表数据日统计
-- drop table TABLE_DAY_STATIS;
begin
proc_create_table('TABLE_DAY_STATIS',
'CREATE TABLE "TABLE_DAY_STATIS" (
"ID" NUMBER(11) NOT NULL,
"TABLE_ID" NUMBER(11),
"TABLE_TYPE" NVARCHAR2(128),
"GRAPH_ID" NUMBER(11),
"GRAPH_TYPE" NVARCHAR2(128),
"DATA_AMOUNT" NUMBER(11),
"STATIS_DT" DATE
)');
end;
/
COMMENT ON COLUMN "TABLE_DAY_STATIS"."ID" IS 'id';
COMMENT ON COLUMN "TABLE_DAY_STATIS"."TABLE_ID" IS '表ID';
COMMENT ON COLUMN "TABLE_DAY_STATIS"."TABLE_TYPE" IS '表类型';
COMMENT ON COLUMN "TABLE_DAY_STATIS"."GRAPH_ID" IS '图谱ID';
COMMENT ON COLUMN "TABLE_DAY_STATIS"."GRAPH_TYPE" IS '图谱类型';
COMMENT ON COLUMN "TABLE_DAY_STATIS"."DATA_AMOUNT" IS '数据条数';
COMMENT ON COLUMN "TABLE_DAY_STATIS"."STATIS_DT" IS '记录创建时间统计时间';
COMMENT ON TABLE "TABLE_DAY_STATIS"  IS '表数据日统计';
/
-- 表数据月统计
-- drop table TABLE_MONTH_STATIS;
begin
proc_create_table('TABLE_MONTH_STATIS',
'CREATE TABLE "TABLE_MONTH_STATIS" (
"ID" NUMBER(11) NOT NULL,
"TABLE_ID" NUMBER(11),
"TABLE_TYPE" NVARCHAR2(128),
"GRAPH_ID" NUMBER(11),
"GRAPH_TYPE" NVARCHAR2(128),
"DATA_AMOUNT" NUMBER(11),
"STATIS_DT" DATE
)');
end;
/
COMMENT ON COLUMN "TABLE_MONTH_STATIS"."ID" IS 'id';
COMMENT ON COLUMN "TABLE_MONTH_STATIS"."TABLE_ID" IS '表ID';
COMMENT ON COLUMN "TABLE_MONTH_STATIS"."TABLE_TYPE" IS '表类型';
COMMENT ON COLUMN "TABLE_MONTH_STATIS"."GRAPH_ID" IS '图谱ID';
COMMENT ON COLUMN "TABLE_MONTH_STATIS"."GRAPH_TYPE" IS '图谱类型';
COMMENT ON COLUMN "TABLE_MONTH_STATIS"."DATA_AMOUNT" IS '数据条数';
COMMENT ON COLUMN "TABLE_MONTH_STATIS"."STATIS_DT" IS '记录创建时间统计时间';
COMMENT ON TABLE "TABLE_MONTH_STATIS"  IS '表数据月统计';
/
-- 图谱数据月统计
-- drop table GRAPH_MONTH_STATIS;
begin
proc_create_table('GRAPH_MONTH_STATIS',
'CREATE TABLE "GRAPH_MONTH_STATIS" (
"ID" NUMBER(11) NOT NULL,
"GRAPH_ID" NUMBER(11),
"GRAPH_TYPE" NVARCHAR2(128),
"DATA_AMOUNT" NUMBER(11),
"STATIS_DT" DATE
)');
end;
/
COMMENT ON COLUMN "GRAPH_MONTH_STATIS"."ID" IS 'id';
COMMENT ON COLUMN "GRAPH_MONTH_STATIS"."GRAPH_ID" IS '图谱ID';
COMMENT ON COLUMN "GRAPH_MONTH_STATIS"."GRAPH_TYPE" IS '图谱类型';
COMMENT ON COLUMN "GRAPH_MONTH_STATIS"."DATA_AMOUNT" IS '数据条数';
COMMENT ON COLUMN "GRAPH_MONTH_STATIS"."STATIS_DT" IS '记录创建时间统计时间';
COMMENT ON TABLE "GRAPH_MONTH_STATIS"  IS '图谱数据月统计';
/
-- 图谱数据日统计
-- drop table GRAPH_DAY_STATIS;
begin
proc_create_table('GRAPH_DAY_STATIS',
'CREATE TABLE "GRAPH_DAY_STATIS" (
"ID" NUMBER(11) NOT NULL,
"GRAPH_ID" NUMBER(11),
"GRAPH_TYPE" NVARCHAR2(128),
"DATA_AMOUNT" NUMBER(11),
"STATIS_DT" DATE
)');
end;
/
COMMENT ON COLUMN "GRAPH_DAY_STATIS"."ID" IS 'id';
COMMENT ON COLUMN "GRAPH_DAY_STATIS"."GRAPH_ID" IS '图谱ID';
COMMENT ON COLUMN "GRAPH_DAY_STATIS"."GRAPH_TYPE" IS '图谱类型';
COMMENT ON COLUMN "GRAPH_DAY_STATIS"."DATA_AMOUNT" IS '数据条数';
COMMENT ON COLUMN "GRAPH_DAY_STATIS"."STATIS_DT" IS '记录创建时间统计时间';
COMMENT ON TABLE "GRAPH_DAY_STATIS"  IS '图谱数据日统计';
/
-- 图谱概要数据日统计
-- drop table SUMMARY_DAY_STATIS;
begin
proc_create_table('SUMMARY_DAY_STATIS',
'CREATE TABLE "SUMMARY_DAY_STATIS" (
"ID" NUMBER(11) NOT NULL,
"BASE_GROUP_NODE_TYPE_COUNT" NUMBER(11),
"BASE_GROUP_EDGE_TYPE_COUNT" NUMBER(11),
"COMMON_GROUP_COUNT" NUMBER(11),
"APP_SUB_GROUP_COUNT" NUMBER(11),
"BASE_GROUP_DATA_AMOUNT" NUMBER(11),
"COMMON_GROUP_DATA_AMOUNT" NUMBER(11),
"APP_SUB_GROUP_DATA_AMOUNT" NUMBER(11),
"STATIS_DT" DATE
)');
end;
/
COMMENT ON COLUMN "SUMMARY_DAY_STATIS"."ID" IS 'id';
COMMENT ON COLUMN "SUMMARY_DAY_STATIS"."BASE_GROUP_NODE_TYPE_COUNT" IS '基础图谱实体种类的个数';
COMMENT ON COLUMN "SUMMARY_DAY_STATIS"."BASE_GROUP_EDGE_TYPE_COUNT" IS '基础图谱关系种类的个数';
COMMENT ON COLUMN "SUMMARY_DAY_STATIS"."COMMON_GROUP_COUNT" IS '通用图谱的个数';
COMMENT ON COLUMN "SUMMARY_DAY_STATIS"."APP_SUB_GROUP_COUNT" IS '应用子图的个数';
COMMENT ON COLUMN "SUMMARY_DAY_STATIS"."BASE_GROUP_DATA_AMOUNT" IS '基础图谱的数据量（数据条数）';
COMMENT ON COLUMN "SUMMARY_DAY_STATIS"."COMMON_GROUP_DATA_AMOUNT" IS '通用图谱的数据量（数据条数）';
COMMENT ON COLUMN "SUMMARY_DAY_STATIS"."APP_SUB_GROUP_DATA_AMOUNT" IS '应用子图的数据量（数据条数）';
COMMENT ON COLUMN "SUMMARY_DAY_STATIS"."STATIS_DT" IS '记录创建时间统计时间';
COMMENT ON TABLE "SUMMARY_DAY_STATIS"  IS '图谱概要数据日统计';
/
-- 图谱概要数据月统计
-- drop table SUMMARY_MONTH_STATIS;
begin
proc_create_table('SUMMARY_MONTH_STATIS',
'CREATE TABLE "SUMMARY_MONTH_STATIS" (
"ID" NUMBER(11) NOT NULL,
"BASE_GROUP_NODE_TYPE_COUNT" NUMBER(11),
"BASE_GROUP_EDGE_TYPE_COUNT" NUMBER(11),
"COMMON_GROUP_COUNT" NUMBER(11),
"APP_SUB_GROUP_COUNT" NUMBER(11),
"BASE_GROUP_DATA_AMOUNT" NUMBER(11),
"COMMON_GROUP_DATA_AMOUNT" NUMBER(11),
"APP_SUB_GROUP_DATA_AMOUNT" NUMBER(11),
"STATIS_DT" DATE
)');
end;
/
COMMENT ON COLUMN "SUMMARY_MONTH_STATIS"."ID" IS 'id';
COMMENT ON COLUMN "SUMMARY_MONTH_STATIS"."BASE_GROUP_NODE_TYPE_COUNT" IS '基础图谱实体种类的个数';
COMMENT ON COLUMN "SUMMARY_MONTH_STATIS"."BASE_GROUP_EDGE_TYPE_COUNT" IS '基础图谱关系种类的个数';
COMMENT ON COLUMN "SUMMARY_MONTH_STATIS"."COMMON_GROUP_COUNT" IS '通用图谱的个数';
COMMENT ON COLUMN "SUMMARY_MONTH_STATIS"."APP_SUB_GROUP_COUNT" IS '应用子图的个数';
COMMENT ON COLUMN "SUMMARY_MONTH_STATIS"."BASE_GROUP_DATA_AMOUNT" IS '基础图谱的数据量（数据条数）';
COMMENT ON COLUMN "SUMMARY_MONTH_STATIS"."COMMON_GROUP_DATA_AMOUNT" IS '通用图谱的数据量（数据条数）';
COMMENT ON COLUMN "SUMMARY_MONTH_STATIS"."APP_SUB_GROUP_DATA_AMOUNT" IS '应用子图的数据量（数据条数）';
COMMENT ON COLUMN "SUMMARY_MONTH_STATIS"."STATIS_DT" IS '记录创建时间统计时间';
COMMENT ON TABLE "SUMMARY_MONTH_STATIS"  IS '图谱概要数据月统计';
/

-- 已申请的表数据存储模型
begin
-- proc_drop_table('TABLE_APPLICATION');
proc_create_table('TABLE_APPLICATION',
'CREATE TABLE "TABLE_APPLICATION" (
"ID" NUMBER(11) NOT NULL,
"GRAPH_ID" NUMBER(11),
"TABLE_ID" NUMBER(11),
"SUB_GRAPH_ID" NUMBER(11),
"ORG_ID" NUMBER(11)
)');
end;
/
COMMENT ON COLUMN "TABLE_APPLICATION"."ID" IS 'id';
COMMENT ON COLUMN "TABLE_APPLICATION"."GRAPH_ID" IS '图谱ID';
COMMENT ON COLUMN "TABLE_APPLICATION"."TABLE_ID" IS '表ID';
COMMENT ON COLUMN "TABLE_APPLICATION"."SUB_GRAPH_ID" IS '申请用户所在子图空间ID';
COMMENT ON COLUMN "TABLE_APPLICATION"."ORG_ID" IS '申请用户所在组织ID';
COMMENT ON TABLE "TABLE_APPLICATION"  IS '已申请的表数据存储模型';
/
-- 表数据申请存储模型
begin
-- proc_drop_table('TABLE_APPLY');
proc_create_table('TABLE_APPLY',
'CREATE TABLE "TABLE_APPLY" (
"ID" NUMBER(11) NOT NULL,
"APPLY_NO" NVARCHAR2(128),
"NAME" NVARCHAR2(128),
"APPLY_TYPE" NVARCHAR2(128),
"SUB_GRAPH_ID" NUMBER(11),
"ORG_ID" NUMBER(11),
"REASON" NVARCHAR2(128),
"AUDIT_STATE" NVARCHAR2(128)
)');
end;
/
COMMENT ON COLUMN "TABLE_APPLY"."ID" IS 'id';
COMMENT ON COLUMN "TABLE_APPLY"."APPLY_NO" IS '申请id';
COMMENT ON COLUMN "TABLE_APPLY"."NAME" IS '申请名称';
COMMENT ON COLUMN "TABLE_APPLY"."APPLY_TYPE" IS '申请类型，ADD-新增, UPDATE-变更, DELETE-删除';
COMMENT ON COLUMN "TABLE_APPLY"."SUB_GRAPH_ID" IS '申请用户所在子图空间ID';
COMMENT ON COLUMN "TABLE_APPLY"."ORG_ID" IS '申请用户所在组织ID';
COMMENT ON COLUMN "TABLE_APPLY"."REASON" IS '申请原因';
COMMENT ON COLUMN "TABLE_APPLY"."AUDIT_STATE" IS '审批状态';
COMMENT ON TABLE "TABLE_APPLY"  IS '表数据申请存储模型';
/
-- 表数据申请项存储模型
begin
-- proc_drop_table('TABLE_APPLY_ITEM');
proc_create_table('TABLE_APPLY_ITEM',
'CREATE TABLE "TABLE_APPLY_ITEM" (
"ID" NUMBER(11) NOT NULL,
"APPLY_ID" NUMBER(11),
"GRAPH_ID" NUMBER(11),
"TABLE_ID" NUMBER(11)
)');
end;
/
COMMENT ON COLUMN "TABLE_APPLY_ITEM"."ID" IS 'id';
COMMENT ON COLUMN "TABLE_APPLY_ITEM"."APPLY_ID" IS '申请单ID';
COMMENT ON COLUMN "TABLE_APPLY_ITEM"."GRAPH_ID" IS '图谱ID';
COMMENT ON COLUMN "TABLE_APPLY_ITEM"."TABLE_ID" IS '表ID';
COMMENT ON TABLE "TABLE_APPLY_ITEM"  IS '表数据申请项存储模型';
/



-- ==================
-- 修改表结构更新位置
-- ==================
begin
proc_column_update ('addColumn','ONT_GRAPH_VERSION','VERSION_NUM', 'NUMBER(11)');
proc_column_update ('modColumnName','GRAPH_TABLE_VERSION','VERSION','NAME');
proc_column_update ('addColumn','ONT_GRAPH_HISTORY','ORI_GRAPH_ID', 'NUMBER(11)');
proc_column_update ('modColumnName','ONT_GRAPH_HISTORY','GRAPH_ID','ORI_GRAPH_ID');
proc_column_update ('modColumnComment','GRAPH_TABLE_VERSION','NAME','版本号');
end;
/


-- ==================
-- 初始化数据部分
-- ==================

-- 初始化内置图谱
DELETE FROM GRAPH where ID < 0;
INSERT INTO GRAPH(ID,"TYPE","NAME","NAME_CN") VALUES(-1,'BASE','base_graph','基础图谱');


-- ==================
-- 升级脚本固定结束部分(结束部分请勿再插入其它业务更新语句)
-- ==================


-- DROP SEQUENCE HIBERNATE_SEQUENCE;
CREATE OR REPLACE SEQUENCE HIBERNATE_SEQUENCE
MINVALUE 1
MAXVALUE 999999999999999999999999999
START WITH 100000
INCREMENT BY 1
CACHE 100;

-- 检查关键字
-- DECLARE
--     CURSOR table_cursor IS
--             SELECT 'talbe: ' ||  tb.TABLE_NAME || '  column: ' || col.COLUMN_NAME || ' 为关键字，不符合规范' as res
--             FROM SYS_TABLES tb LEFT JOIN user_col_comments col ON tb.TABLE_NAME = col.TABLE_NAME
--             WHERE EXISTS (SELECT 1 FROM DATABASE_KEYWORD kw WHERE col.COLUMN_NAME = kw.KEY_WORD);
--     errmsg      VARCHAR(5000);
--     msgLength    INT;
-- BEGIN
-- 	errmsg := '';
-- FOR msg IN table_cursor LOOP
--     errmsg := errmsg || chr(10) || msg.res;
-- END LOOP;
-- 	msgLength := LENGTH(errmsg);
--     IF msgLength > 0
--     THEN
-- 		raise_application_error(-20000, errmsg);
-- END IF;
-- END;
-- /

COMMIT;